图
描述
一个数列 a 称为合法的当且仅对于所有的位置 i, j（i < j ≤ n），都不存在一条从 aj 点连向 ai 的有向边。现在有很多个有向无环图，请你判断每个图是否只存在唯一的合法数列。

输入
输入的第一行包含一个正整数 T ，表示数据组数。

对于每组数据，第一行包含两个正整数 n, m，表示图的节点个数和边数。

接下来 m 行，每行包含两个正整数 x, y（x, y ≤ n），表示这个图有一条从 x 到 y 的有向边。

保证没有自环和重边。

输出
输出 T 行，若所给的图存在唯一的合法数列，输出 1，否则输出 0。

样例1输入
2
3 2
1 2
2 3
3 2
1 2
1 3
样例1输出
1
0
样例1解释
第一个图只有一个合法数列：1、2、3；

第二个图有两个合法数列：1、2、3 或者 1、3、2。

样例2
请查看下发文件内的sample2_input.txt和sample2_output.txt。

限制
对于50%的数据，n, m ≤ 100；

对于100%的数据，T ≤ 100, n, m ≤ 10000。

时间：4 sec

空间：512 MB

提示
[本题就是判断一个有向无环图是否存在唯一的拓扑序列。]

[回忆一下求拓扑序列是如何做的：每一次都取一个入度为0的点，将这个点取出来放进拓扑序列里，然后将这个点连向的所有点的入度减去1。]

[可以发现，在“每一次都取一个入度为0”这一步，若入度为0的点数多于1个，则显然拓扑序不唯一。]

[因此按照这个拓扑序算法做一遍就好。]

另外，为了帮助大家完成题目，我们提供了只包含了输入输出功能的程序模板，也提供了含有算法的大部分实现细节的程序。

你可以根据自己的实际情况，在这些程序的基础上进行作答，或不参考这些程序，这将与你的得分无关。

这些程序可以从【这里】下载。