二叉查找树
描述
实现一种数据结构，维护一个整数集合（该集合中数字可重复存在），并拥有以下功能：

插入一个数字
删除一个数字
查询某个数字有多少个
查询最值
查询某个数字的前驱（就是集合中比该数字小的最大值）
输入
第一行一个整数n，表示操作个数。

接下来n行，每行表示一个操作，第一个数字op表示操作种类：

若op=1，后面跟着一个整数x，表示插入数字x
若op=2，后面跟着一个整数x，表示删除数字x（若存在则删除，若有多个则只删除一个）
若op=3，后面跟着一个整数x，输出数字x在集合中有多少个（若x不在集合中则输出0）
若op=4，输出集合中的最小值（保证集合非空）
若op=5，后面跟着一个整数x，输出x的前驱（若不存在前驱则输出None，x不一定在集合中）
输出
对需要输出的op进行输出，一行输出一个。

样例1输入
18
1 2
1 -1
1 0
1 2
2 -2
2 3
1 2
2 2
3 2
3 0
3 -2
4
5 -2
5 -1
5 0
5 1
5 2
5 3
样例1输出
2
1
0
-1
None
None
-1
0
0
2
样例2
点击下载

限制
对于30%的数据，1 ≤ n ≤ 100；

对于另30%的数据，1 ≤ n ≤ 1000；

对于100%的数据，1 ≤ n ≤ 100000。

保证题目中出现的整数均在[-10^9, 10^9]内。

保证数据不刻意构造（随机生成）。

时间：2 sec

空间：512 MB

提示
[二叉查找树或平衡树的基本操作。]

