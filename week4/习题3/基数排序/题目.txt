基数排序
时间限制：10 sec

空间限制：1 GB

问题描述
给定 n 个 [0,2^k) 之间的整数，请你将它们升序排序。

由于 n 可能很大，为了避免过大的输入、输出规模，我们会在程序内部生成数据，并要求你输出排序后序列的哈希值。具体方法如下（用c++代码展示）：

typedef unsigned int u32;
u32 nextInt(u32 x){
	x^=x<<13;
	x^=x>>17;
	x^=x<<5;
	return x;
}
void initData(u32 *a,int n,int k,u32 seed){
	for (int i=0;i<n;++i){
		seed=nextInt(seed);
		a[i]=seed>>(32-k);
	}
}
u32 hashArr(u32 *a,int n){
	u32 x=998244353,ret=0;
	for (int i=0;i<n;++i){
		ret^=(a[i]+x);
		x=nextInt(x);
	}
	return ret;
}
输入将会给定 n,k,seed。

你可以调用 initData(a,n,k,seed) 来获得需要排序的 a 数组。

排序后，你可以调用函数 hashArr(a,n) 来获得我们希望你输出的哈希值。

输入格式
一行 3 个用空格隔开的整数 n,k,seed，意义见题目描述。

输出格式
一行一个整数，表示我们希望你输出的哈希值。

样例输入
5 4 233333
样例输出
740640512
样例解释
生成的序列应为 4 10 13 9 4，排序后的结果应为 4 4 9 10 13。

数据范围
本题共设置 4 组数据。

对于第 1 组数据，保证 n=1000，k=16。

对于第 2 组数据，保证 n=5*10^6，k=32。

对于第 3 组数据，保证 n=10^8，k=16。

对于第 4 组数据，保证 n=10^8，k=32。

保证给定的 seed 在 32 位无符号整数的范围内。

提示
[对于 k=16 的数据，使用基数排序即可。]

[对于 k=32 的数据，不妨考虑两次基数排序哦！（即先排二进制下后 16 位，再排二进制下前 16 位）]

另外，为了帮助大家完成题目，我们提供了只包含了输入输出功能的程序模板，也提供了含有算法的大部分实现细节的程序。

你可以根据自己的实际情况，在这些程序的基础上进行作答，或不参考这些程序，这将与你的得分无关。

这些程序可以从【这里】下载。

Source
[改编自：「WC2017」挑战（[[https://loj.ac/problem/2286]]）]

